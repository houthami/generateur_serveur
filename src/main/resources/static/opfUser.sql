--------------------------| CREATE__TABLE:OPF_NAT_FONCTION |----------------------------------
CREATE TABLE ORASSADM.OPF_NAT_FONCTION
(
  CODNATFO  VARCHAR2(10 BYTE),
  LIBNATFO  VARCHAR2(100 BYTE)
) ;
CREATE UNIQUE INDEX ORASSADM.PK_OPF_NAT_FONCTION ON ORASSADM.OPF_NAT_FONCTION (CODNATFO) TABLESPACE ORASS_IX;
ALTER TABLE ORASSADM.OPF_NAT_FONCTION ADD (
  CONSTRAINT PK_OPF_NAT_FONCTION
  PRIMARY KEY
  (CODNATFO)
  USING INDEX ORASSADM.PK_OPF_NAT_FONCTION
  ENABLE VALIDATE);
  --------------------------| END__TABLE:OPF_NAT_FONCTION |---------------------------------
--------------------------| CREATE__TABLE:OPF_USER |----------------------------------
  CREATE TABLE ENTITE_GESTION
  (
    ENTIGEST  NUMBER(10),
    LIBEENTI  VARCHAR2(60 BYTE),
    CODTYPIN  VARCHAR2(1 BYTE),
    CODEINTE  NUMBER(5),
    RESPENTI  VARCHAR2(60 BYTE),
    MAILRESP  VARCHAR2(60 BYTE),
    TELEENTI  VARCHAR2(40 BYTE),
    TELEXENT  VARCHAR2(20 BYTE),
    FAXRENTI  VARCHAR2(40 BYTE),
    ENTISUPR  NUMBER(10),
    NUME_LOT  NUMBER
  );
  COMMENT ON COLUMN ENTITE_GESTION.LIBEENTI IS 'libelle entite ?';
  COMMENT ON COLUMN ENTITE_GESTION.CODTYPIN IS 'Code Type';
  COMMENT ON COLUMN ENTITE_GESTION.CODEINTE IS 'Code intermediaire';
  COMMENT ON COLUMN ENTITE_GESTION.TELEENTI IS 'telephone entite ?';

  CREATE UNIQUE INDEX PK_ENTITE_GESTION ON ENTITE_GESTION (ENTIGEST) TABLESPACE ORASS_IX;

  ALTER TABLE ENTITE_GESTION ADD (
    CONSTRAINT PK_ENTITE_GESTION
    PRIMARY KEY
    (ENTIGEST)
    USING INDEX PK_ENTITE_GESTION
    ENABLE VALIDATE);
--------------------------| END__TABLE:ENTITE_GESTION |---------------------------------
--------------------------| CREATE__TABLE:OPF_TYPE_PROFIL |----------------------------------
  CREATE TABLE OPF_TYPE_PROFIL
  (
    CODTYPPR  VARCHAR2(5 BYTE),
    LIBTYPPR  VARCHAR2(80 BYTE)
  );
  COMMENT ON TABLE OPF_TYPE_PROFIL IS 'Type Profil utilisateur Compagie, Souscripterur, Tiers Payants';
  CREATE UNIQUE INDEX PK_TYPE_PROFILE ON OPF_TYPE_PROFIL (CODTYPPR) TABLESPACE ORASS;
  ALTER TABLE OPF_TYPE_PROFIL ADD (
    CONSTRAINT PK_TYPE_PROFILE
    PRIMARY KEY
    (CODTYPPR)
    USING INDEX PK_TYPE_PROFILE
    ENABLE VALIDATE);
--------------------------| END__TABLE:OPF_TYPE_PROFIL |---------------------------------
--------------------------| CREATE__TABLE:OPF_STATUS_USER |----------------------------------
  CREATE TABLE OPF_STATUS_USER
  (
    STATUSER  VARCHAR2(1 BYTE),
    LIBSTAUS  VARCHAR2(20 BYTE),
    CLASTAUS  VARCHAR2(20 BYTE)
  );
  CREATE UNIQUE INDEX PK_STATUS_USER ON OPF_STATUS_USER (STATUSER) TABLESPACE ORASS ;
  ALTER TABLE OPF_STATUS_USER ADD (
    CONSTRAINT PK_STATUS_USER
    PRIMARY KEY
    (STATUSER)
    USING INDEX PK_STATUS_USER
    ENABLE VALIDATE);
--------------------------| END__TABLE:OPF_STATUS_USER |---------------------------------
--------------------------| CREATE__TABLE:OPF_USER_FONCTION |----------------------------------
CREATE TABLE OPF_USER_FONCTION
(
  CODEFONC  NUMBER(5),
  LIBEFONC  VARCHAR2(100 BYTE),
  CODNATFO  VARCHAR2(10 BYTE)
);
COMMENT ON COLUMN OPF_USER_FONCTION.CODNATFO IS 'Nature Fonction';
CREATE UNIQUE INDEX PK_USER_FONCTION ON OPF_USER_FONCTION (CODEFONC) TABLESPACE ORASS;
ALTER TABLE OPF_USER_FONCTION ADD (
  CONSTRAINT PK_USER_FONCTION
  PRIMARY KEY
  (CODEFONC)
  USING INDEX PK_USER_FONCTION
  ENABLE VALIDATE);
CREATE INDEX IFK_FONCTION_NAT ON OPF_USER_FONCTION (CODNATFO) TABLESPACE ORASS_IX;
ALTER TABLE OPF_USER_FONCTION ADD (
  CONSTRAINT FK_FONCTION_NAT
  FOREIGN KEY (CODNATFO)
  REFERENCES OPF_NAT_FONCTION (CODNATFO)
  ENABLE VALIDATE);
--------------------------| END__TABLE:OPF_USER_FONCTION |---------------------------------
--------------------------| CREATE__TABLE:OPF_USER |----------------------------------
CREATE TABLE OPF_USER
(
  IDENPOST  NUMBER(10)                          NOT NULL,
  NOM_UTIL  VARCHAR2(30 BYTE)                   NOT NULL,
  NOM_PREN  VARCHAR2(100 BYTE),
  TELEUSER  VARCHAR2(20 BYTE),
  MAILUSER  VARCHAR2(100 BYTE),
  CODEFONC  NUMBER(5),
  ADREUSER  VARCHAR2(100 BYTE),
  CODESOCI  NUMBER(2),
  FLAGADMI  VARCHAR2(1 BYTE),
  FLAGTRAC  VARCHAR2(1 BYTE)                    DEFAULT 'N',
  TYPPROPR  VARCHAR2(10 BYTE),
  CODEASSU  NUMBER(12),
  ID_CARTE  NUMBER(25),
  STATUSER  VARCHAR2(1 BYTE)                    DEFAULT 'A'                   NOT NULL,
  DATESTAT  DATE                                DEFAULT sysdate               NOT NULL,
  EXPI__LE  DATE,
  MODI_PAR  VARCHAR2(60 BYTE),
  MODI__LE  DATE,
  CREE_PAR  VARCHAR2(60 BYTE),
  CREE__LE  DATE,
  USERPASS  VARCHAR2(200 BYTE),
  SALTPASS  VARCHAR2(600 BYTE),
  ENTIGEST  NUMBER(10),
  MUSCHAPW  VARCHAR2(1 BYTE)                    DEFAULT 'N',
  DATCHAPW  DATE,
  NUMEIMMA  VARCHAR2(50 BYTE),
  IDENPHOT  NUMBER(20),
  LOG_LEVL  VARCHAR2(1 BYTE)                    DEFAULT 'E',
  CODEAPPO  NUMBER(10)
);

COMMENT ON COLUMN OPF_USER.TYPPROPR IS 'Type Profil principal';
COMMENT ON COLUMN OPF_USER.MUSCHAPW IS 'Si "O" force de changement du mot de passe';
COMMENT ON COLUMN OPF_USER.DATCHAPW IS 'Dernier date de changement du mot de passe';
COMMENT ON COLUMN OPF_USER.LOG_LEVL IS 'Niveau des logs: D: Debug, I: Info, W: Warning, E: Error';
COMMENT ON COLUMN OPF_USER.CODEAPPO IS 'Code Apporteur connect√©';

CREATE UNIQUE INDEX CLE_ORASS_USER ON OPF_USER (NOM_UTIL) TABLESPACE ORASS_IX;
CREATE UNIQUE INDEX PK_ORASS_USER ON OPF_USER (IDENPOST) TABLESPACE ORASS_IX;
CREATE INDEX FK_USER_CODEFONC ON OPF_USER (CODEFONC) TABLESPACE ORASS_IX;
CREATE INDEX IFK_USER_STATUSER ON OPF_USER(STATUSER) TABLESPACE ORASS_IX;
CREATE INDEX IFK_USER_TYPPROPR ON OPF_USER (TYPPROPR) TABLESPACE ORASS_IX;
CREATE INDEX IFK_USR_ENT_GEST ON OPF_USER(ENTIGEST) TABLESPACE ORASS_IX ; 

ALTER TABLE OPF_USER ADD (
  CONSTRAINT PK_ORASS_USER
  PRIMARY KEY
  (IDENPOST)
  USING INDEX PK_ORASS_USER
  ENABLE VALIDATE);
ALTER TABLE OPF_USER ADD (
  CONSTRAINT FK_USER_CODEFONC 
  FOREIGN KEY (CODEFONC) 
  REFERENCES OPF_USER_FONCTION (CODEFONC)
  ENABLE VALIDATE
,  CONSTRAINT FK_USER_STATUSER 
  FOREIGN KEY (STATUSER) 
  REFERENCES OPF_STATUS_USER (STATUSER)
  ENABLE VALIDATE
,  CONSTRAINT FK_USER_TYPPROPR 
  FOREIGN KEY (TYPPROPR) 
  REFERENCES OPF_TYPE_PROFIL (CODTYPPR)
  ENABLE VALIDATE
,  CONSTRAINT FK_USR_ENT_GEST 
  FOREIGN KEY (ENTIGEST) 
  REFERENCES ENTITE_GESTION (ENTIGEST)
  ENABLE VALIDATE);

  --------------------------| END__TABLE:OPF_USER |---------------------------------